<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProCrowdFundingMapper">
  <resultMap id="BaseResultMap" type="com.qkl.tfcc.api.po.project.ProCrowdFunding">
    <id column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_stage" jdbcType="INTEGER" property="projectStage" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="office_address" jdbcType="VARCHAR" property="officeAddress" />
    <result column="office_detail" jdbcType="VARCHAR" property="officeDetail" />
    <result column="team_count" jdbcType="INTEGER" property="teamCount" />
    <result column="ipo_stage" jdbcType="INTEGER" property="ipoStage" />
    <result column="project_desc" jdbcType="VARCHAR" property="projectDesc" />
    <result column="project_desc_detail" jdbcType="VARCHAR" property="projectDescDetail" />
    <result column="publicity_video" jdbcType="VARCHAR" property="publicityVideo" />
    <result column="cover_picture" jdbcType="VARCHAR" property="coverPicture" />
    <result column="rich_text" jdbcType="VARCHAR" property="richText" />
    <result column="invest_coin_type" jdbcType="INTEGER" property="investCoinType" />
    <result column="invest_limit" jdbcType="INTEGER" property="investLimit" />
    <result column="invest_amount" jdbcType="DECIMAL" property="investAmount" />
    <result column="repay_desc" jdbcType="VARCHAR" property="repayDesc" />
    <result column="quota_limit" jdbcType="INTEGER" property="quotaLimit" />
    <result column="support_limit" jdbcType="INTEGER" property="supportLimit" />
    <result column="is_free_deliver" jdbcType="INTEGER" property="isFreeDeliver" />
    <result column="repay_period" jdbcType="INTEGER" property="repayPeriod" />
    <result column="ico_period" jdbcType="INTEGER" property="icoPeriod" />
    <result column="target_limit" jdbcType="INTEGER" property="targetLimit" />
    <result column="target_type" jdbcType="INTEGER" property="targetType" />
    <result column="invest_rate" jdbcType="DECIMAL" property="investRate" />
    <result column="invest_count" jdbcType="DECIMAL" property="investCount" />
    <result column="target_amount" jdbcType="DECIMAL" property="targetAmount" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="job_position" jdbcType="VARCHAR" property="jobPosition" />
    <result column="contact_tel" jdbcType="CHAR" property="contactTel" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="project_state" jdbcType="INTEGER" property="projectState" />
    <result column="min_investment_amount" jdbcType="DECIMAL" property="minInvestmentAmount" />
    <result column="max_investment_amount" jdbcType="DECIMAL" property="maxInvestmentAmount" />
    <result column="invest_btc_count" jdbcType="DECIMAL" property="investBtcCount" />
    <result column="invest_eth_count" jdbcType="DECIMAL" property="investEthCount" />
    <result column="invest_ltc_count" jdbcType="DECIMAL" property="investLtcCount" />
    <result column="invest_san_count" jdbcType="DECIMAL" property="investSanCount" />
    <result column="visible_type" jdbcType="VARCHAR" property="visibleType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    project_id, user_code, project_name, project_stage, real_name, office_address, office_detail,
    team_count, ipo_stage, project_desc, project_desc_detail, publicity_video, cover_picture,
    rich_text, invest_coin_type, invest_limit, invest_amount, repay_desc, quota_limit,
    support_limit, is_free_deliver, repay_period, ico_period, target_limit, target_type,
    invest_rate, invest_count, target_amount, contact_name, job_position, contact_tel,
    start_time, end_time, create_time, project_state, min_investment_amount, max_investment_amount,
    invest_btc_count,invest_eth_count,invest_ltc_count,invest_san_count,visible_type
  </sql>
 <!--  <select id="selectByExample" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFundingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pro_crowdfunding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select> -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pro_crowdfunding
    where project_id = #{projectId,jdbcType=VARCHAR}
  </select>

  <select id="findProject" parameterType="com.qkl.util.help.pager.PageData" resultType="com.qkl.util.help.pager.PageData">
	  select  
	  <!-- invest_btctobtc,invest_ethtobtc,invest_ltctobtc,invest_santobtc, -->
	  pc.target_limit,pc.invest_amount,pc.project_desc,company_name,left(pc.start_time,19)  start_time,left(pc.end_time,19) end_time ,pc.project_state,pc.project_id,pc.project_name,pc.cover_picture,
	  pc.target_amount,    case when now() > end_time then 0 else datediff(end_time, start_time)  end remaind_days,visible_type,
	  invest_count ,invest_btc_count,invest_eth_count,invest_ltc_count,invest_san_count,pc.stock_num,pc.exchange_num
	 <!--  , (select count(1) from pro_support_amount psa where pc.project_id =psa.project_id) support_count ,
	  ROUND(((invest_eth_count/invest_ethtobtc)+(invest_btc_count/invest_btctobtc)+(invest_ltc_count/invest_ltctobtc)+ (invest_san_count/invest_santobtc)  )/target_amount *100,2)  invest_rate,
    ROUND(((invest_eth_count/invest_ethtobtc)+(invest_btc_count/invest_btctobtc)+(invest_ltc_count/invest_ltctobtc)+ (invest_san_count/invest_santobtc)  )/target_amount *100,2)*target_amount/100 now_count
     -->
    from  pro_crowdfunding pc
     where 1=1
	     <!--  <choose>
	        <when test="projectState != null and projectState != '' ">
	        <where>
	             project_state=#{projectState}
	          </where>
	        </when>
	        <when test="all != null and all != '' ">
	          <where>
	            project_state in ('4','5','6','8')
	          </where>
	        </when>
	      </choose> -->
	      <if test="projectState != null and projectState != ''">
            and project_state = #{projectState}
          </if>
           
	       <if test="visibleType != null and visibleType != ''">
            and visible_type in ('0','1')
          </if>
	  order by start_time desc
	</select>


  <select id="showMyProject" parameterType="com.qkl.util.help.pager.PageData" resultType="com.qkl.util.help.pager.PageData">
      select company_name,project_id,project_desc,project_name,project_desc_detail,invest_amount,target_amount,invest_rate,left(start_time,19) start_time,left(end_time,19) end_time ,
        left(create_time,19) create_time, project_state,ico_period
      from pro_crowdfunding where user_code=#{userCode}
    <choose>
      <when test="project_state != null and project_state != '' ">
         and  project_state=#{project_state}
      </when>
      <when test="all != null and all != '' ">
         and  project_state in ('0','1','2','3','4','5','6','7','8')
      </when>
    </choose>
      ORDER BY create_time desc
  </select>


  <select id="IcoProjectDetail" parameterType="com.qkl.util.help.pager.PageData" resultType="java.util.Map">
  <!--project_desc,project_desc_detail,cover_picture,rich_text,target_amount,end_time,project_state,repay_desc-->
    SELECT
	    project_id,
	    user_code,
	    project_name,
	    project_stage,
	    company_name,
	    real_name,
	    office_address,
	    office_detail,
	    team_count,
	    ipo_stage,
	    project_desc,
	    project_desc_detail,
	    publicity_video,
	    cover_picture,
	    rich_text,
	    invest_limit,
	    invest_amount,
	    repay_desc,
	    quota_limit,
	    support_limit,
	    is_free_deliver,
	    repay_period,
	    ico_period,
	    target_limit,
	    target_type,
	    invest_btc_count,
	    invest_eth_count,
	    invest_ltc_count,
	    invest_san_count,
	    invest_count,
	    target_amount,
	    contact_name,
	    job_position,
	    contact_tel,
	    service_charge,
	    start_time,
	    end_time,
	    create_time,
	    project_state,
	    min_investment_amount,
	    max_investment_amount,
	    CASE
	WHEN invest_coin_type = 1 THEN
	    'BTC'
	WHEN invest_coin_type = 2 THEN
	    'ETH'
	ELSE
	    'LTC'
	END AS invest_coin_type,
	stock_num,
	exchange_num	
    FROM
		        `pro_crowdfunding`
		    WHERE
		        project_id = #{projectId}
  </select>

  <select id="icoProjectsCount" parameterType="com.qkl.util.help.pager.PageData"  resultType="java.util.Map">
    select  ( select count(project_state)   from pro_crowdfunding where project_state in ('1','2','3','4'))  entire, (select count(project_state)   from pro_crowdfunding where project_state =1) future,
    (select count(project_state)   from pro_crowdfunding where project_state =2)  now ,
    (select count(project_state)   from pro_crowdfunding where project_state =3) finish ,
	(select count(project_state)   from pro_crowdfunding where project_state =4) ending
            from pro_crowdfunding
            where 1=1 
           <if test="projectState != null and projectState != ''">
            and project_state = #{projectState}
          </if>
           
	       <if test="visibleType != null and visibleType != ''">
            and visible_type in ('0','1')
          </if>
             limit 1
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pro_crowdfunding
    where project_id = #{projectId,jdbcType=VARCHAR}
  </delete>
<!--   <delete id="deleteByExample" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFundingExample">
    delete from pro_crowdfunding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete> -->
  <insert id="insert" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFunding">
    <selectKey keyProperty="projectId" order="BEFORE" resultType="java.lang.String">
      select  replace(uuid(),'-','')   from dual
    </selectKey>
    insert into pro_crowdfunding (project_id, user_code, project_name,
      project_stage, real_name, office_address,
      office_detail, team_count, ipo_stage,
      project_desc, project_desc_detail, publicity_video,
      cover_picture, rich_text, invest_coin_type,
      invest_limit, invest_amount, repay_desc,
      quota_limit, support_limit, is_free_deliver,
      repay_period, ico_period, target_limit,
      target_type, invest_rate, invest_count,
      target_amount, contact_name, job_position,
      contact_tel, start_time, end_time,
      create_time, project_state, min_investment_amount,
      max_investment_amount)
    values (#{projectId,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR},
      #{projectStage,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{officeAddress,jdbcType=VARCHAR},
      #{officeDetail,jdbcType=VARCHAR}, #{teamCount,jdbcType=INTEGER}, #{ipoStage,jdbcType=INTEGER},
      #{projectDesc,jdbcType=VARCHAR}, #{projectDescDetail,jdbcType=VARCHAR}, #{publicityVideo,jdbcType=VARCHAR},
      #{coverPicture,jdbcType=VARCHAR}, #{richText,jdbcType=VARCHAR}, #{investCoinType,jdbcType=INTEGER},
      #{investLimit,jdbcType=INTEGER}, #{investAmount,jdbcType=DECIMAL}, #{repayDesc,jdbcType=VARCHAR},
      #{quotaLimit,jdbcType=INTEGER}, #{supportLimit,jdbcType=INTEGER}, #{isFreeDeliver,jdbcType=INTEGER},
      #{repayPeriod,jdbcType=INTEGER}, #{icoPeriod,jdbcType=INTEGER}, #{targetLimit,jdbcType=INTEGER},
      #{targetType,jdbcType=INTEGER}, #{investRate,jdbcType=DECIMAL}, #{investCount,jdbcType=DECIMAL},
      #{targetAmount,jdbcType=DECIMAL}, #{contactName,jdbcType=VARCHAR}, #{jobPosition,jdbcType=VARCHAR},
      #{contactTel,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP}, #{projectState,jdbcType=INTEGER}, #{minInvestmentAmount,jdbcType=DECIMAL},
      #{maxInvestmentAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFunding">
    <selectKey keyProperty="projectId" order="BEFORE" resultType="java.lang.String">
      select  replace(uuid(),'-','')   from dual
    </selectKey>
    insert into pro_crowdfunding
    <trim prefix="(" suffix=")" suffixOverrides=",">
      project_id,
      <if test="userCode != null">
        user_code,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectStage != null">
        project_stage,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="officeAddress != null">
        office_address,
      </if>
      <if test="officeDetail != null">
        office_detail,
      </if>
      <if test="teamCount != null">
        team_count,
      </if>
      <if test="ipoStage != null">
        ipo_stage,
      </if>
      <if test="projectDesc != null">
        project_desc,
      </if>
      <if test="projectDescDetail != null">
        project_desc_detail,
      </if>
      <if test="publicityVideo != null">
        publicity_video,
      </if>
      <if test="coverPicture != null">
        cover_picture,
      </if>
      <if test="richText != null">
        rich_text,
      </if>
      <if test="investCoinType != null">
        invest_coin_type,
      </if>
      <if test="investLimit != null">
        invest_limit,
      </if>
      <if test="investAmount != null">
        invest_amount,
      </if>
      <if test="repayDesc != null">
        repay_desc,
      </if>
      <if test="quotaLimit != null">
        quota_limit,
      </if>
      <if test="supportLimit != null">
        support_limit,
      </if>
      <if test="isFreeDeliver != null">
        is_free_deliver,
      </if>
      <if test="repayPeriod != null">
        repay_period,
      </if>
      <if test="icoPeriod != null">
        ico_period,
      </if>
      <if test="targetLimit != null">
        target_limit,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="investRate != null">
        invest_rate,
      </if>
      <if test="investCount != null">
        invest_count,
      </if>
      <if test="targetAmount != null">
        target_amount,
      </if>
      <if test="contactName != null">
        contact_name,
      </if>
      <if test="jobPosition != null">
        job_position,
      </if>
      <if test="contactTel != null">
        contact_tel,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="projectState != null">
        project_state,
      </if>
      <if test="minInvestmentAmount != null">
        min_investment_amount,
      </if>
      <if test="maxInvestmentAmount != null">
        max_investment_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{projectId,jdbcType=VARCHAR},
      <if test="userCode != null">
        #{user_code,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectStage != null">
        #{projectStage,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null">
        #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeDetail != null">
        #{officeDetail,jdbcType=VARCHAR},
      </if>
      <if test="teamCount != null">
        #{teamCount,jdbcType=INTEGER},
      </if>
      <if test="ipoStage != null">
        #{ipoStage,jdbcType=INTEGER},
      </if>
      <if test="projectDesc != null">
        #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectDescDetail != null">
        #{projectDescDetail,jdbcType=VARCHAR},
      </if>
      <if test="publicityVideo != null">
        #{publicityVideo,jdbcType=VARCHAR},
      </if>
      <if test="coverPicture != null">
        #{coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="richText != null">
        #{richText,jdbcType=VARCHAR},
      </if>
      <if test="investCoinType != null">
        #{investCoinType,jdbcType=INTEGER},
      </if>
      <if test="investLimit != null">
        #{investLimit,jdbcType=INTEGER},
      </if>
      <if test="investAmount != null">
        #{investAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayDesc != null">
        #{repayDesc,jdbcType=VARCHAR},
      </if>
      <if test="quotaLimit != null">
        #{quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="supportLimit != null">
        #{supportLimit,jdbcType=INTEGER},
      </if>
      <if test="isFreeDeliver != null">
        #{isFreeDeliver,jdbcType=INTEGER},
      </if>
      <if test="repayPeriod != null">
        #{repayPeriod,jdbcType=INTEGER},
      </if>
      <if test="icoPeriod != null">
        #{icoPeriod,jdbcType=INTEGER},
      </if>
      <if test="targetLimit != null">
        #{targetLimit,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=INTEGER},
      </if>
      <if test="investRate != null">
        #{investRate,jdbcType=DECIMAL},
      </if>
      <if test="investCount != null">
        #{investCount,jdbcType=DECIMAL},
      </if>
      <if test="targetAmount != null">
        #{targetAmount,jdbcType=DECIMAL},
      </if>
      <if test="contactName != null">
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="jobPosition != null">
        #{jobPosition,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null">
        #{contactTel,jdbcType=CHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectState != null">
        #{projectState,jdbcType=INTEGER},
      </if>
      <if test="minInvestmentAmount != null">
        #{minInvestmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="maxInvestmentAmount != null">
        #{maxInvestmentAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
 <!--  <select id="countByExample" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFundingExample" resultType="java.lang.Long">
    select count(*) from pro_crowdfunding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select> -->
  <update id="updateByExampleSelective" parameterType="map">
    update pro_crowdfunding
    <set>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        userId = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectStage != null">
        project_stage = #{record.projectStage,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.officeAddress != null">
        office_address = #{record.officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.officeDetail != null">
        office_detail = #{record.officeDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.teamCount != null">
        team_count = #{record.teamCount,jdbcType=INTEGER},
      </if>
      <if test="record.ipoStage != null">
        ipo_stage = #{record.ipoStage,jdbcType=INTEGER},
      </if>
      <if test="record.projectDesc != null">
        project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectDescDetail != null">
        project_desc_detail = #{record.projectDescDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.publicityVideo != null">
        publicity_video = #{record.publicityVideo,jdbcType=VARCHAR},
      </if>
      <if test="record.coverPicture != null">
        cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.richText != null">
        rich_text = #{record.richText,jdbcType=VARCHAR},
      </if>
      <if test="record.investCoinType != null">
        invest_coin_type = #{record.investCoinType,jdbcType=INTEGER},
      </if>
      <if test="record.investLimit != null">
        invest_limit = #{record.investLimit,jdbcType=INTEGER},
      </if>
      <if test="record.investAmount != null">
        invest_amount = #{record.investAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.repayDesc != null">
        repay_desc = #{record.repayDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.quotaLimit != null">
        quota_limit = #{record.quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="record.supportLimit != null">
        support_limit = #{record.supportLimit,jdbcType=INTEGER},
      </if>
      <if test="record.isFreeDeliver != null">
        is_free_deliver = #{record.isFreeDeliver,jdbcType=INTEGER},
      </if>
      <if test="record.repayPeriod != null">
        repay_period = #{record.repayPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.icoPeriod != null">
        ico_period = #{record.icoPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.targetLimit != null">
        target_limit = #{record.targetLimit,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null">
        target_type = #{record.targetType,jdbcType=INTEGER},
      </if>
      <if test="record.investRate != null">
        invest_rate = #{record.investRate,jdbcType=DECIMAL},
      </if>
      <if test="record.investCount != null">
        invest_count = #{record.investCount,jdbcType=DECIMAL},
      </if>
      <if test="record.targetAmount != null">
        target_amount = #{record.targetAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.contactName != null">
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobPosition != null">
        job_position = #{record.jobPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.contactTel != null">
        contact_tel = #{record.contactTel,jdbcType=CHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectState != null">
        project_state = #{record.projectState,jdbcType=INTEGER},
      </if>
      <if test="record.minInvestmentAmount != null">
        min_investment_amount = #{record.minInvestmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.maxInvestmentAmount != null">
        max_investment_amount = #{record.maxInvestmentAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pro_crowdfunding
    set project_id = #{record.projectId,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_stage = #{record.projectStage,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      office_address = #{record.officeAddress,jdbcType=VARCHAR},
      office_detail = #{record.officeDetail,jdbcType=VARCHAR},
      team_count = #{record.teamCount,jdbcType=INTEGER},
      ipo_stage = #{record.ipoStage,jdbcType=INTEGER},
      project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      project_desc_detail = #{record.projectDescDetail,jdbcType=VARCHAR},
      publicity_video = #{record.publicityVideo,jdbcType=VARCHAR},
      cover_picture = #{record.coverPicture,jdbcType=VARCHAR},
      rich_text = #{record.richText,jdbcType=VARCHAR},
      invest_coin_type = #{record.investCoinType,jdbcType=INTEGER},
      invest_limit = #{record.investLimit,jdbcType=INTEGER},
      invest_amount = #{record.investAmount,jdbcType=DECIMAL},
      repay_desc = #{record.repayDesc,jdbcType=VARCHAR},
      quota_limit = #{record.quotaLimit,jdbcType=INTEGER},
      support_limit = #{record.supportLimit,jdbcType=INTEGER},
      is_free_deliver = #{record.isFreeDeliver,jdbcType=INTEGER},
      repay_period = #{record.repayPeriod,jdbcType=INTEGER},
      ico_period = #{record.icoPeriod,jdbcType=INTEGER},
      target_limit = #{record.targetLimit,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=INTEGER},
      invest_rate = #{record.investRate,jdbcType=DECIMAL},
      invest_count = #{record.investCount,jdbcType=DECIMAL},
      target_amount = #{record.targetAmount,jdbcType=DECIMAL},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      job_position = #{record.jobPosition,jdbcType=VARCHAR},
      contact_tel = #{record.contactTel,jdbcType=CHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      project_state = #{record.projectState,jdbcType=INTEGER},
      min_investment_amount = #{record.minInvestmentAmount,jdbcType=DECIMAL},
      max_investment_amount = #{record.maxInvestmentAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFunding">
    update pro_crowdfunding
    <set>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectStage != null">
        project_stage = #{projectStage,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null">
        office_address = #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeDetail != null">
        office_detail = #{officeDetail,jdbcType=VARCHAR},
      </if>
      <if test="teamCount != null">
        team_count = #{teamCount,jdbcType=INTEGER},
      </if>
      <if test="ipoStage != null">
        ipo_stage = #{ipoStage,jdbcType=INTEGER},
      </if>
      <if test="projectDesc != null">
        project_desc = #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectDescDetail != null">
        project_desc_detail = #{projectDescDetail,jdbcType=VARCHAR},
      </if>
      <if test="publicityVideo != null">
        publicity_video = #{publicityVideo,jdbcType=VARCHAR},
      </if>
      <if test="coverPicture != null">
        cover_picture = #{coverPicture,jdbcType=VARCHAR},
      </if>
      <if test="richText != null">
        rich_text = #{richText,jdbcType=VARCHAR},
      </if>
      <if test="investCoinType != null">
        invest_coin_type = #{investCoinType,jdbcType=INTEGER},
      </if>
      <if test="investLimit != null">
        invest_limit = #{investLimit,jdbcType=INTEGER},
      </if>
      <if test="investAmount != null">
        invest_amount = #{investAmount,jdbcType=DECIMAL},
      </if>
      <if test="repayDesc != null">
        repay_desc = #{repayDesc,jdbcType=VARCHAR},
      </if>
      <if test="quotaLimit != null">
        quota_limit = #{quotaLimit,jdbcType=INTEGER},
      </if>
      <if test="supportLimit != null">
        support_limit = #{supportLimit,jdbcType=INTEGER},
      </if>
      <if test="isFreeDeliver != null">
        is_free_deliver = #{isFreeDeliver,jdbcType=INTEGER},
      </if>
      <if test="repayPeriod != null">
        repay_period = #{repayPeriod,jdbcType=INTEGER},
      </if>
      <if test="icoPeriod != null">
        ico_period = #{icoPeriod,jdbcType=INTEGER},
      </if>
      <if test="targetLimit != null">
        target_limit = #{targetLimit,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=INTEGER},
      </if>
      <if test="investRate != null">
        invest_rate = #{investRate,jdbcType=DECIMAL},
      </if>
      <if test="investCount != null">
        invest_count = #{investCount,jdbcType=DECIMAL},
      </if>
      <if test="targetAmount != null">
        target_amount = #{targetAmount,jdbcType=DECIMAL},
      </if>
      <if test="contactName != null">
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="jobPosition != null">
        job_position = #{jobPosition,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null">
        contact_tel = #{contactTel,jdbcType=CHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectState != null">
        project_state = #{projectState,jdbcType=INTEGER},
      </if>
      <if test="minInvestmentAmount != null">
        min_investment_amount = #{minInvestmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="maxInvestmentAmount != null">
        max_investment_amount = #{maxInvestmentAmount,jdbcType=DECIMAL},
      </if>
      <if test="investBtcCount != null">
        invest_btc_count = #{investBtcCount,jdbcType=DECIMAL},
      </if>
      <if test="investEthCount != null">
        invest_eth_count = #{investEthCount,jdbcType=DECIMAL},
      </if>
      <if test="investLtcCount != null">
        invest_ltc_count = #{investLtcCount,jdbcType=DECIMAL},
      </if>
      <if test="investSanCount != null">
        invest_san_count = #{investSanCount,jdbcType=DECIMAL},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>


  <update id="updateByPrimaryBaseKey" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFundingBaseInfo">
    update pro_crowdfunding
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectStage != null">
        project_stage = #{projectStage,jdbcType=INTEGER},
      </if>
      <if test="projectStage != null">
        project_stage = #{projectStage,jdbcType=INTEGER},
      </if>
      <if test="projectDesc != null">
        project_desc = #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="officeAddress != null">
        office_address = #{officeAddress,jdbcType=VARCHAR},
      </if>
      <if test="officeDetail != null">
        office_detail = #{officeDetail,jdbcType=VARCHAR},
      </if>
      <if test="teamCount != null">
        team_count = #{teamCount,jdbcType=INTEGER},
      </if>
      <if test="ipoStage != null">
        ipo_stage = #{ipoStage,jdbcType=INTEGER},
      </if>
      <if test="publicityVideo != null">
        publicity_video = #{publicityVideo,jdbcType=VARCHAR},
      </if>
      <if test="coverPicture != null">
        cover_picture = #{coverPicture,jdbcType=VARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=VARCHAR}
    and user_code=#{userCode,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.qkl.tfcc.api.po.project.ProCrowdFunding">
    update pro_crowdfunding
    set user_code = #{userCode,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_stage = #{projectStage,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      office_address = #{officeAddress,jdbcType=VARCHAR},
      office_detail = #{officeDetail,jdbcType=VARCHAR},
      team_count = #{teamCount,jdbcType=INTEGER},
      ipo_stage = #{ipoStage,jdbcType=INTEGER},
      project_desc = #{projectDesc,jdbcType=VARCHAR},
      project_desc_detail = #{projectDescDetail,jdbcType=VARCHAR},
      publicity_video = #{publicityVideo,jdbcType=VARCHAR},
      cover_picture = #{coverPicture,jdbcType=VARCHAR},
      rich_text = #{richText,jdbcType=VARCHAR},
      invest_coin_type = #{investCoinType,jdbcType=INTEGER},
      invest_limit = #{investLimit,jdbcType=INTEGER},
      invest_amount = #{investAmount,jdbcType=DECIMAL},
      repay_desc = #{repayDesc,jdbcType=VARCHAR},
      quota_limit = #{quotaLimit,jdbcType=INTEGER},
      support_limit = #{supportLimit,jdbcType=INTEGER},
      is_free_deliver = #{isFreeDeliver,jdbcType=INTEGER},
      repay_period = #{repayPeriod,jdbcType=INTEGER},
      ico_period = #{icoPeriod,jdbcType=INTEGER},
      target_limit = #{targetLimit,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=INTEGER},
      invest_rate = #{investRate,jdbcType=DECIMAL},
      invest_count = #{investCount,jdbcType=DECIMAL},
      target_amount = #{targetAmount,jdbcType=DECIMAL},
      contact_name = #{contactName,jdbcType=VARCHAR},
      job_position = #{jobPosition,jdbcType=VARCHAR},
      contact_tel = #{contactTel,jdbcType=CHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      project_state = #{projectState,jdbcType=INTEGER},
      min_investment_amount = #{minInvestmentAmount,jdbcType=DECIMAL},
      max_investment_amount = #{maxInvestmentAmount,jdbcType=DECIMAL}
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateProjectProcess" parameterType="com.qkl.util.help.pager.PageData">
   <!-- update pro_crowdfunding set invest_count = invest_count + #{investCount}, invest_rate=invest_rate + #{investRate} where project_id = #{projectID}
-->
        update pro_crowdfunding
    <set>
      <if test="invest_btc_count != null">
        invest_btc_count = invest_btc_count+#{invest_btc_count,jdbcType=VARCHAR}
      </if>
      <if test="invest_eth_count != null">
        invest_eth_count = invest_eth_count+#{invest_eth_count,jdbcType=VARCHAR}
      </if>
      <if test="invest_etc_count != null">
        invest_etc_count = invest_etc_count+#{invest_etc_count,jdbcType=VARCHAR}
      </if>
      <if test="invest_ltc_count != null">
        invest_ltc_count = invest_ltc_count+#{invest_ltc_count,jdbcType=VARCHAR}
      </if>
      <if test="invest_san_count != null">
        invest_san_count = invest_san_count+#{invest_san_count,jdbcType=VARCHAR}
      </if>
    </set>
         where project_id = #{projectID}
  </update>

  <update id="updateProjectState" parameterType="java.lang.String">
    UPDATE pro_crowdfunding SET project_state='6' WHERE project_id=#{projectID}
  </update>
  <select id="listProCrowdFunding" parameterType="java.lang.String" resultType="java.util.Map">
  	select
  		project_id, user_code, project_name, project_stage, real_name, office_address, office_detail,
  		team_count, ipo_stage, project_desc, project_desc_detail, publicity_video, cover_picture, 
  		rich_text, invest_coin_type, (select count(1) from pro_support_amount where 
  		project_id=#{projectId})as support_count, invest_amount, start_time, end_time, 
  		invest_count, ROUND((invest_count/target_amount),2)*100  invest_rate
  	from
  		pro_crowdfunding
  	where
  		project_id=#{projectId}
  </select>

  <!--ROUND (LEFT (((invest_eth_count/invest_ethtobtc)+(invest_ltc_count/invest_ltctobtc)+ (invest_san_count/invest_santobtc)+ (invest_btc_count/invest_btctobtc) )/target_amount,8)*100,4)  invest_rate-->
  <select id="findProjectById" parameterType="java.lang.String" resultType="com.qkl.util.help.pager.PageData">
	select invest_btctobtc,invest_ethtobtc,invest_ltctobtc,invest_santobtc,invest_amount,left(start_time,19)  start_time,invest_btc_count,invest_eth_count,invest_ltc_count,invest_san_count, left(end_time,19) end_time ,invest_count,target_limit,min_investment_amount,max_investment_amount,project_state,project_name,target_amount ,ul.user_name,
    ROUND(((invest_eth_count/invest_ethtobtc)+(invest_btc_count/invest_btctobtc)+(invest_ltc_count/invest_ltctobtc)+ (invest_san_count/invest_santobtc)  )/target_amount *100,4)  invest_rate
    FROM
	      pro_crowdfunding pc,tb_user ul
	        WHERE
	        pc.user_code =ul.user_code
	            and project_id =#{projectId}
	</select>

</mapper>